#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <unistd.h>
	
	/* constantes enumeradas que almacenan el estado actual del juego*/
	enum status {CONTINUA, GANA, PIERDE};
/* Prototipo de la función tiraDados */
int tiraDados (void);

int main () {
	printf("\n*************************************\n");
	printf("           Bienvenido a Craps\n");
	printf("              Diviertete\n");
	printf("*************************************\n\n");
	int suma;
	int miPunto;
	
	enum status  statusJuego;
	
	/*Randomizamos el generador de números
	srand (time (NULL));
	suma = tiraDados();
	
	/* Determina el estado del juego basándose en la suma de los dados */
	switch (suma) {
		/* El jugador gana en el primer tiro */
	case 7:
	case 11:
		statusJuego = GANA;
		break;
		
		/* El jugador pierde en el primer tiro */
	case 2:
	case 3:
	case 12:
		statusJuego = PIERDE;
		break;
		
		/* El jugador continua */
	default:
		statusJuego = CONTINUA;
		miPunto = suma;
		printf ("\nEL PUNTO ESTABLECIDO ES %d\n\n",miPunto);
		break;
	} /* Fin del switch */
	
	/* Mientras el juego no se complete */
	while (statusJuego == CONTINUA) {
		suma = tiraDados ();
		
		/* Determinamos el estado del juego */
		if (suma == miPunto) {
			statusJuego = GANA;
		} else if (suma == 7) {
			statusJuego = PIERDE;
		}
	} 
	
	/* Despliega el mensaje ve vencedor o derrotado */
	if (statusJuego == GANA) {
		printf ("\nFELICIDADES, GANASTE\n");
	} else {
		printf ("\nPERDISTE, SIGUE INTENTANDOLO\n");
	}
	return 0;
} 

/* Declaración de la función tiraDados */
int tiraDados (void) {
	int i;
	int dado1;
	int dado2;
	int sumaTemp;
	
	dado1 = 1 + rand() % 6;
	dado2 = 1 + rand() % 6;
	sumaTemp = dado1 + dado2;
	
	/* Imprimimos los resultados del tiro de dados */
	printf("\nPRESIONA ENTER PARA TIRAR LOS DADOS.");
	getchar();
	printf("TIRANDO LOS DADOS\n");
	for (i=0;i<=10;i+=1){
		printf("*");
		sleep(1);
	}
	printf("\nDado 1: %d", dado1);
	printf("\nDado 2: %d", dado2);
	printf ( "\nEl jugador ha obtenido una putuacion de %d\n\n", sumaTemp);
	return sumaTemp;
} 

